ACORN_TOP_SPEED = 4.5;

TRAIL = [];

// this is the best I can come up with off the top of my head. I'm sure there's a faster way to create a parametric function of the acorn top path

ball = [0, 0];

waypoints = [
	[-1, 0],
	[-6, 0],
	[-6.6, -0.4],
	[-7, -1],
	[-6.6, -1.6],
	[-6, -2],
	[-1, -2],
	[-0.4, -1.6],
	[0, -1],
	[0, -.5]];

v = ACORN_TOP_SPEED + 0.0;

// TODO: use foreach loop?
for (i = 0; i < waypoints.length; ++i) {
	target = waypoints[i];
	tx = target[0] * 16.0;
	ty = target[1] * 16.0;
	
	done = false;
	while (!done) {
		dx = tx - ball[0];
		dy = ty - ball[1];
		distance = (dx ** 2 + dy ** 2) ** .5;
		if (distance <= v) {
			done = true;
			TRAIL.add([tx, ty]);
			ball = [tx, ty];
		} else {
			dx *= v / distance;
			dy *= v / distance;
			ball[0] += dx;
			ball[1] += dy;
			TRAIL.add([$floor(10 * ball[0]) / 10.0, $floor(10 * ball[1]) / 10.0]);
		}
	}
}

class AcornTopAutomation {
	constructor(sprite) {
		this.sprite = sprite;
		this.trail = TRAIL.clone();
		this.trailIndex = 0;
		this.startX = sprite.modelX;
		this.startY = sprite.modelY;
		this.completed = false;
	}
	
	function setGoLeft(goLeft) {
		this.goLeft = goLeft;
		this.xSign = this.goLeft ? 1 : -1;
	}
	
	function setGoUp(goUp) {
		this.ySign = goUp ? 1 : -1;
	}
	
	function doStuff(scene) {
		if (this.trailIndex < this.trail.length) {
			
			rawX = this.trail[this.trailIndex][0];
			rawY = this.trail[this.trailIndex][1];
			
			rawX *= this.xSign;
			rawY *= this.ySign;
			
			targetX = this.startX + rawX;
			targetY = this.startY + rawY;
			
			dx = targetX - this.sprite.modelX;
			dy = targetY - this.sprite.modelY;
			
			this.sprite.dx = dx;
			this.sprite.dy = dy;
			
			this.trailIndex++;
		} else {
			if (this.completed) {
				this.sprite.dead = true;
			}
			this.completed = true;
		}
	}
}
