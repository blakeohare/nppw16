import GFX;
import Gamepad;

class JoystickMenuScene {
	static field ACTIVE_JOYSTICK = null;
	
	field next = this;
	field flags = '';
	field gamepads = [null];
	field index = 0;
	field blink_counter = 0;
	
	constructor() {
		GamepadManager.refreshDevices();
		for (i = 0; i < GamepadManager.getDeviceCount(); ++i) {
			gamepad = GamepadManager.getDeviceByIndex(i);
			this.gamepads.add(gamepad);
			if (gamepad.id == 'active') {
				this.index = i + 1;
			}
		}
	}
	
	// TODO: move this to Gamepad library.
	function clearAllIds() {
		for (i = 0; i < GamepadManager.getDeviceCount(); ++i) {
			GamepadManager.getDeviceByIndex(i).setId(null);
		}
	}
	
	function processInput(events, pressedActions) {
		for (event : events) {
			if (event.down && this.blink_counter <= 0) {
				if (event.action == 'up') {
					if (this.blink_counter < 0) {
						this.index--;
					}
				} else if (event.action == 'down') {
					if (this.blink_counter < 0) {
						this.index++;
					}
				} else if (event.action == 'A' || event.action == 'B' || event.action == 'start') {
					gamepad = this.gamepads[this.index];
					JoystickMenuScene.ACTIVE_JOYSTICK = gamepad;
					if (gamepad == null) {
						this.clearAllIds();
						this.next = new TitleScene();
					} else {
						gamepad.setId('active');
					}
					this.blink_counter = 30;
				}
				
				if (this.index < 0) {
					this.index = 0;
				}
				
				if (this.index >= this.gamepads.length) {
					this.index = this.gamepads.length - 1;
				}
			}
		}
	}
	
	function update() {
		this.blink_counter--;
		if (this.blink_counter == 1) {
			gamepad = JoystickMenuScene.ACTIVE_JOYSTICK[0];
			if (gamepad == null) {
				this.next = new TitleScene();
			} else {
				this.next = new JoystickConfigScreen(gamepad, this);
			}
			this.blink_counter = 0;
		}
	}
	
	function render(rc) {
		GFX.Draw.fill(0, 0, 0);
		
		left = 32;
		drawBox(left - 16, 16, 30, (this.gamepads.length + 1) * 2 + 3);
		
		y = 32;
		drawText(255, 255, 0, "Joystick Selection", 32, y);
		y += 16;
		index = 0;
		for (gamepad : this.gamepads) {
			selected = false;
			if (index == this.index) {
				drawText(255, 255, 255, '>', left, y);
				selected = true;
			}
			
			if (!selected || this.blink_counter <= 0 || rc % 4 < 2) {
				drawText(255, 255, 255, gamepad == null ? "None" : gamepad.name, left + 16, y);
			}
			index++;
			y += 16;
		}
	}
}
