class JoystickMenuScene {
	constructor() {
		this.next = this;
		this.flags = '';
		this.options = ['None'] + get_joystick_manifest();
		this.index = active_joystick == null ? 0 : (1 + joysticks_present[active_joystick]);
		this.blink_counter = 0;
	}
	
	function processInput(events, pressedActions) {
		for (event : events) {
			if (event.down && this.blink_counter <= 0) {
				if (event.action == 'up') {
					this.index--;
				} else if (event.action == 'down') {
					this.index++;
				} else if (event.action == 'A' || event.action == 'B' || event.action == 'start') {
					if (this.index == 0) {
						set_active_joystick(null);
						this.next = new TitleScene();
					} else {
						this.blink_counter = 30;
					}
				}
				
				if (this.index < 0) {
					this.index = 0;
				}
				
				if (this.index >= this.options.length) {
					this.index = this.options.length - 1;
				}
			}
		}
	}
	
	function update() {
		this.blink_counter--;
		if (this.blink_counter == 1) {
			this.next = new JoystickConfigScreen(this.index - 1, this);
			this.blink_counter = 0;
		}
	}
	
	function render(rc) {
		$gfx_fill_screen(0, 0, 0);
		
		left = 32;
		drawBox(left - 16, 16, 30, (this.options.length + 1) * 2 + 3);
		
		y = 32;
		drawText(255, 255, 0, "Joystick Selection", 32, y);
		y += 16;
		index = 0;
		for (option : this.options) {
			selected = false;
			if (index == this.index) {
				drawText(255, 255, 255, '>', left, y);
				selected = true;
			}
			
			if (!selected || this.blink_counter <= 0 || rc % 4 < 2) {
				drawText(255, 255, 255, option, left + 16, y);
			}
			index++;
			y += 16;
		}
	}
}
