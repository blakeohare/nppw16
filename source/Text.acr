
class TextRenderer {
	static field TEXT_FILENAMES = {
		';': 'sc',
		'<': 'left',
		'>': 'right',
		'^': 'up',
		'&': 'am',
		'=': 'eq',
		':': 'col',
		'(': 'op',
		')': 'cp',
		'*': 'as',
		'?': 'qu',
		'.': 'pe',
		'/': 'sl',
		'\'': 'ap',
		'"': 'qt',
		'!': 'ex',
		'`': 'q2',
		'-': 'hy',
		',': 'cm',
	};

	static field lookup_by_color = {};
	
	constructor() { }
	
	static function drawText(colorname, text, x, y) {
		lookup = TextRenderer.lookup_by_color.get(colorname, null);
		if (lookup == null) {
			lookup = {};
			letters = ALPHABET;
			for (i = 0; i < 10; ++i) {
				letters += i;
			}
			for (key : TextRenderer.TEXT_FILENAMES.keys()) {
				letters += key;
			}
			for (char : letters) {
				c = char.lower();
				img = ImageLibrary.get('text/' + colorname + '-' + TextRenderer.TEXT_FILENAMES.get(c, c) + '.png');
				lookup[c] = img;
				lookup[c.upper()] = img;
			}
			TextRenderer.lookup_by_color[colorname] = lookup;
		}
		
		for (c : text) {
			img = lookup.get(c, null);
			
			if (img == null && c != ' ') {
				img = lookup.get('?', null);
			}
			
			if (img != null) {
				img.draw(x, y);
			}
			
			x += 8;
		}
	}
}

function drawText(r, g, b, text, x, y) {
	// TODO: change this to just pass in the color name as an enum.
	color = null;
	if (r == 255) {
		if (g == 255 && b == 255) {
			color = 'white';
		} else if (g == 255 && b == 0) {
			color = 'yellow';
		} else if (g == 0 && b == 0) {
			color = 'red';
		}
	} else if (r == 128) {
		if (g == 128 && b == 128) {
			color = 'gray';
		}
	}
	
	if (color == null) Core.assert(false, "Unknown color: " + r + ', ' + g + ', ' + b);
	TextRenderer.drawText(color, text, x, y);
}
