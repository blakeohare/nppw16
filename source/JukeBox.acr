import Audio;

public static class JukeBox {
	private static string currentSong = null;
	private static bool actuallyPlaying = false;
	
	private static Dictionary<string, Audio.Music> musicResourceCache = new Dictionary<string, Audio.Music>();
	
	private static Dictionary<string, string> SONG_FILENAME_LOOKUP = new Dictionary<string, string>() {
		'title': 'tensebranches',
		'intro': 'open_skies',
		'overworld': 'open_skies',
		'ship': 'spacemachine',
		'credits': 'credits',
		'password': 'fluffytales',
		'volcano': 'lunacy',
		'bike': 'nopressure',
		'water': 'squirrels_can_swim',
		'gravity': 'deadlyacorns',
		'death': 'oopsdead',
		'gameover': 'fluffytales',
	};

	private static Dictionary<string, string> SONG_BY_MAP = {
		'ship_1': 'ship',
		
		'main': 'overworld',
		'balloon_2_overland': 'overworld',
		'balloon_3_overland': 'overworld',
		'bird_overland': 'overworld',
		'volcano_2_overland': 'overworld',
		'volcano_3_overland': 'overworld',
		
		'bike_level': 'bike',
		'bird_link': 'gravity',
		
		'exit_water_phase_locked': 'water',
		'exit_water_phase_unlocked': 'water',
		
		'grav_ascent': 'gravity',
		'grav_core': 'gravity',
		'grav_descent': 'gravity',
		'grav_descent_secret': 'gravity',
		'grav_gate': 'gravity',
		
		'lava_gate_2': 'volcano',
		'lava_gate_2_active': 'volcano',
		'lava_gate_3': 'volcano',
		'lava_gate_3_active': 'volcano',
		'volcano_1_ascent': 'volcano',
		'volcano_1_core': 'volcano',
		'volcano_1_descent': 'volcano',
		'volcano_2_core': 'volcano',
		'volcano_2_lower_ascent': 'volcano',
		'volcano_2_lower_descent': 'volcano',
		'volcano_2_upper_ascent': 'volcano',
		'volcano_2_upper_descent': 'volcano',
		'volcano_2_upper_secret': 'volcano',
		'volcano_3_bottom': 'volcano',
		'volcano_3_core': 'volcano',
		'volcano_3_middle': 'volcano',
		'volcano_3_secret': 'volcano',
		'volcano_3_top': 'volcano',
		
		'water_gate_1_locked': 'water',
		'water_gate_1_unlocked': 'water',
		
		'rope_test': 'gravity',
		
		'birdfeeder': 'gravity',
		
		'section_3_gate': 'gravity',
		'section_3_gate_active': 'gravity',
		'wlink_A1': 'gravity',
		'wlink_A2': 'gravity',
		'wlink_A3': 'gravity',
		'wlink_A4': 'gravity',
		
		'wlink_B_nowater': 'water',
		'wlink_B_somewater': 'water',
		'wlink_B_allwater': 'water',
		
		'wlink_D1_nowater': 'water',
		'wlink_D1_water': 'water',
		'wlink_D2_nowater': 'water',
		'wlink_D2_water': 'water',
		'wlink_D3_nowater': 'water',
		'wlink_D3_water': 'water',
		
		'wlink_E1_nowater': 'water',
		'wlink_E1_water': 'water',
		'wlink_E2': 'water',
		'wlink_E3': 'water',
	};

	public static void ensureSong(string id) {
		if (SOUND_ENABLED) {
			if (JukeBox.currentSong != id) {
				string file = JukeBox.SONG_FILENAME_LOOKUP.get(id, null);
				if (file != null) {
					bool loop = id == 'death';
					string path = 'music/' + file + '.ogg';
					Audio.Music music = JukeBox.loadMusicFromResource(path);
					JukeBox.actuallyPlaying = true;
					music.play(loop);
				} else {
					JukeBox.actuallyPlaying = false;
					Audio.Music.stop();
				}
				
				JukeBox.currentSong = id;
			}
		}
	}
	
	public static Audio.Music loadMusicFromResource(string path) {
		if (SOUND_ENABLED) {
			Audio.Music music = JukeBox.musicResourceCache.get(path);
			if (music == null) {
				music = Audio.Music.loadFromResource(path);
				JukeBox.musicResourceCache[path] = music;
			}
			return music;
		}
	}
	
	public static void playSongForLevelMaybe(string id) {
		Audio.Music song = JukeBox.SONG_BY_MAP.get(id, null);
		if (song != null) {
			JukeBox.ensureSong(song);
		}
	}
	
	public static void pause() {
		// TODO: this
	}
	
	public static void resume() {
		// TODO: this
	}
}
