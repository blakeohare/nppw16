function getSpecialLevelStuff(id, scene) {
	switch (id) {
		case 'main': return [new BalloonPopping(scene, 'water1'), new BalloonPopping(scene, 'water4'), new BalloonPopping(scene, 'lava1')];
		case 'ship_1': return [new ShipTransmission(scene)];
		case 'grav_core': return [new GravityCorePlacement(scene)];
		case 'grav_ascent': return [new GravityAscentExit(scene)];
		case 'volcano_1_core': return [new VolcanoCoreActivation(scene, 1)];
		case 'volcano_2_core': return [new VolcanoCoreActivation(scene, 2)];
		case 'volcano_3_core': return [new VolcanoCoreActivation(scene, 3)];
		case 'balloon_2_overland': return [new BalloonPopping(scene, 'water2')];
		case 'balloon_3_overland': return [new BalloonPopping(scene, 'water3')];
		case 'bike_level': return [new BikeLevelStuff(scene)];
		case 'volcano_2_overland': return [new BalloonPopping(scene, 'lava2')];
		case 'volcano_3_overland': return [new BalloonPopping(scene, 'lava3')];
		case 'birdfeeder': return [new BirdFeeder(scene)];
		default: return [];
	}
}

class SpecialLevelStuff {
	field scene;
	field context;
	field tiles;
	field hasUpdate = false;
	field hasPostInit = false;
	field hasDoorTrigger = false;
	field hasRender = false;
	
	// meh, hacks
	field lavaLevel = 0;
	field shakeScreen = false;
	field freeze = false;
	
	constructor(scene) {
		this.scene = scene;
		this.context = scene.context;
		this.tiles = scene.tiles;
	}
	
	// override and return None if you want that door to do something special. 
	// The doorId will be post-swapped.
	function doorTrigger(doorId) {
		return doorId;
	}
}
